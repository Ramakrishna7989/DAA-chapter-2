#include <stdio.h>
#include <math.h>

struct Point {
    float x, y;
};

float calculateDistance(struct Point p1, struct Point p2) {
    return sqrt((p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y));
}

void findClosestPair(struct Point points[], int n) {
    float minDistance = __FLT_MAX__;
    int point1, point2;

    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            float distance = calculateDistance(points[i], points[j]);
            if (distance < minDistance) {
                minDistance = distance;
                point1 = i;
                point2 = j;
            }
        }
    }

    printf("Closest Pair of Points: (%.1f, %.1f) and (%.1f, %.1f)\n", points[point1].x, points[point1].y, points[point2].x, points[point2].y);
}

int main() {
    struct Point points[] = {{10, 0}, {11, 5}, {5, 3}, {9, 3.5}, {15, 3}, {12.5, 7}, {6, 6.5}, {7.5, 4.5}};
    int n = sizeof(points) / sizeof(points[0]);

    findClosestPair(points, n);

    return 0;
}
